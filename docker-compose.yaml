services:
  kfd-config-server:
    image: stannisl/kfd-config-server:b493ea0
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - kfd-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  kfd-discovery-service:
    # build: ../discovery-server
    image: stannisl/kfd-discovery-service:ebd9c36
    container_name: discovery-service
    ports:
      - "8761:8761"
    environment:
      - CONFIG_SERVER_URI=http://kfd-config-server:8888
    networks:
      - kfd-network
    depends_on:
      kfd-config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
  kdf-api-gateway:
    # image: api-gateway:latest
    image: stannisl/kfd-api-gateway:549b310
    container_name: api-gateway
    environment:
      - CONFIG_SERVER_URI=http://kfd-config-server:8888
      - DISCOVERY_SERVER_URI=http://kfd-discovery-service:8761/eureka
    ports:
      - "8080:8080"
    depends_on:
      kfd-discovery-service:
        condition: service_healthy
    networks:
      - kfd-network

  kfd-postgres:
    image: postgres:latest
    container_name: kfd-postgres-db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - kfd-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  kfd-user-service:
    # build: ../user-microservice
    image: stannisl/kfd-user-service:1dfa085
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      CONFIG_SERVER_URI: http://kfd-config-server:8888
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      DATABASE_NAME: user_service_db
      POSTGRES_JDBC_URL: kfd-postgres:5432
      DISCOVERY_SERVER_URI: http://kfd-discovery-service:8761/eureka
    networks:
      - kfd-network
    depends_on:
      kfd-discovery-service:
        condition: service_healthy
      kfd-postgres:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  kfd-board-service:
    # build: ../board-microservice
    image: stannisl/kfd-board-service:b6f6090
    container_name: board-service
    ports:
      - "8082:8082"
    environment:
      CONFIG_SERVER_URI: http://kfd-config-server:8888
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASSWORD}
      DATABASE_NAME: board_service_db
      POSTGRES_JDBC_URL: kfd-postgres:5432
      DISCOVERY_SERVER_URI: http://kfd-discovery-service:8761/eureka
    networks:
      - kfd-network
    depends_on:
      kfd-discovery-service:
        condition: service_healthy
      kfd-postgres:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  kfd-prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - kfd-network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      kfd-config-server:
        condition: service_healthy
      kfd-discovery-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/ready"]
      interval: 10s
      timeout: 5s
      retries: 20

  kfd-grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - kfd-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_DEFAULT_THEME=dark
    depends_on:
      kfd-prometheus:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
  prometheus_data:
  grafana_data:

networks:
  kfd-network:
    driver: bridge
